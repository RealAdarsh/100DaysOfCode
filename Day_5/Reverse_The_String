Problem Description
You are given a string A of size N.

Return the string A after reversing the string word by word.

NOTE:

A sequence of non-space characters constitutes a word.
Your reversed string should not contain leading or trailing spaces, even if it is present in the input string.
If there are multiple spaces between words, reduce them to a single space in the reversed string.


Problem Constraints
1 <= N <= 3 * 105



Input Format
The only argument given is string A.



Output Format
Return the string A after reversing the string word by word.



Example Input
Input 1:
    A = "the sky is blue"
Input 2:
    A = "this is ib"


Example Output
Output 1:
    "blue is sky the"
Output 2:
    "ib is this"    


Example Explanation
Explanation 1:
    We reverse the string word by word so the string becomes "the sky is blue".
Explanation 2:
    We reverse the string word by word so the string becomes "this is ib".



    Solution:






string Solution::solve(string A) {


    int low=0;
    int high=A.size()-1;

    while (A[high]==32) high--;
    while (A[low]==32) low++;

    while (low<high){
        swap(A[low],A[high]);
        low++;
        high--;
    }

    int start=0;
    int end=0;

    while (A[start]==32) start++;

    for (int i=0; i<A.size(); i++){

        if (A[i]==32) {
            end=i-1;
            while (start<end){
                swap(A[start], A[end]);
                start++;
                end--;
            }

            start=i+1;
        }
    }

    end=A.size()-1;

    while (start<end){
        swap(A[start], A[end]);
    }

    end=A.size()-1;
    while(A[end]==32){
        A.erase(A.begin()+end);
    }

    return A;
}

