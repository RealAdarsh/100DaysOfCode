Problem Description
Given an array A of N integers.

Find the largest continuous sequence in a array which sums to zero.



Problem Constraints
1 <= N <= 106

-107 <= A[i] <= 107



Input Format
Single argument which is an integer array A.



Output Format
Return an array denoting the longest continuous sequence with total sum of zero.

NOTE : If there are multiple correct answers, return the sequence which occurs first in the array.



Example Input
A = [1,2,-2,4,-4]


Example Output
[2,-2,4,-4]


Example Explanation
[2,-2,4,-4] is the longest sequence with total sum of zero.



Solution:


vector<int> Solution::lszero(vector<int> &A) {

    unordered_map <int, int> mp;
    int sum=0;
    int right_index=-1;
    int left_index=-1;
    int maxi=INT_MIN;

    for (int i=0; i<A.size(); i++){
        sum=sum+A[i];
        if (sum==0){
            if (i+1 > maxi){
                maxi=i+1;
                left_index=-1;
                right_index=i;
            }

        }


        else if (mp.find(sum)!=mp.end()){
            if ((i-mp[sum]) > maxi){
                maxi=i-mp[sum];
                left_index=mp[sum];
                right_index=i;
            }
        }
        else{
            mp[sum]=i;
        }

    }

    vector <int> sol;

    for (int i=left_index+1; i<=right_index; i++){
        sol.push_back(A[i]);

    }

    return sol;


}

