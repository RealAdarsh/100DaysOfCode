Problem Description
Given a vector A of non-negative integers representing an elevation map where the width of each bar is 1, compute how much water it is able to trap after raining.



Problem Constraints
1 <= |A| <= 100000



Input Format
First and only argument is the vector A



Output Format
Return one integer, the answer to the question



Example Input
Input 1:

A = [0, 1, 0, 2]
Input 2:

A = [1, 2]


Example Output
Output 1:

1
Output 2:

0


Example Explanation
Explanation 1:

1 unit is trapped on top of the 3rd element.
Explanation 2:

No water is trapped.


Solution: 


int Solution::trap(const vector<int> &A) {

    vector <int> right(A.size());
    vector <int> left(A.size());

    int maxi=0;

    for (int i=0; i<A.size(); i++){
        maxi=max(maxi, A[i]);
        left[i]=maxi;

    }

    maxi=0;

    for (int i=A.size()-1; i>=0; i--){
        maxi=max(maxi, A[i]);
        right[i]=maxi;
    }

    int sum=0;

    for (int i=1; i<A.size()-1; i++){
        sum+=min(right[i], left[i])-A[i];
    }

    return sum;
}

