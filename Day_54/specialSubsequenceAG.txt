Problem Description
You have given a string A having Uppercase English letters.

You have to find how many times subsequence "AG" is there in the given string.

NOTE: Return the answer modulo 109 + 7 as the answer can be very large.



Problem Constraints
1 <= length(A) <= 105



Input Format
First and only argument is a string A.



Output Format
Return an integer denoting the answer.



Example Input
Input 1:

 A = "ABCGAG"
Input 2:

 A = "GAB"


Example Output
Output 1:

 3
Output 2:

 0


Example Explanation
Explanation 1:

 Subsequence "AG" is 3 times in given string 
Explanation 2:

 There is no subsequence "AG" in the given string.


 Solution:


 #define m 1000000007

int Solution::solve(string A) {

    int n=A.size();
    long long sol=0;

    vector <int> suffixArr (A.size());

    if (A[n-1]=='G'){
        suffixArr[n-1]=1;
    }

    else suffixArr[n-1]=0;

    for (int i=A.size()-2; i>=0; i--){
        if (A[i]=='G'){
            suffixArr[i]=(suffixArr[i+1] + 1)%m;
        }
        else {
            suffixArr[i]=suffixArr[i+1];
        }
    }

    for (int i=0; i<n; i++){
        if (A[i]=='A'){
            sol=((sol%m)+(suffixArr[i]%m))%m;
        }
    }

    return sol;
}

