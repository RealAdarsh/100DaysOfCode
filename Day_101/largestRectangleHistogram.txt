Problem Description
Given an array of integers A.

A represents a histogram i.e A[i] denotes the height of the ith histogram's bar. Width of each bar is 1.

Find the area of the largest rectangle formed by the histogram.



Problem Constraints
1 <= |A| <= 100000

1 <= A[i] <= 1000000000



Input Format
The only argument given is the integer array A.



Output Format
Return the area of the largest rectangle in the histogram.



Example Input
Input 1:

 A = [2, 1, 5, 6, 2, 3]
Input 2:

 A = [2]


Example Output
Output 1:

 10
Output 2:

 2


Example Explanation
Explanation 1:

The largest rectangle has area = 10 unit. Formed by A[3] to A[4].
Explanation 2:

Largest rectangle has area 2.


Solution:

int Solution::largestRectangleArea(vector<int> &A) {
    vector <int> left;
    vector <int> right;
    stack <int> st1;
    stack <int> st2;
    int n=A.size();
    int area=INT_MIN;

    for (int i=0; i<A.size(); i++){
        while(!st1.empty() && A[i]<=A[st1.top()]){
            st1.pop();
        }

        if (st1.size()==0){
            left.push_back(-1);
        }
        else {
            left.push_back(st1.top());
        }

        st1.push(i);
    }

    for (int i=A.size()-1; i>=0; i--){
        while(!st2.empty() && A[i]<=A[st2.top()]){
            st2.pop();
        }

        if (st2.size()==0){
            right.push_back(n);
        }
        else {
            right.push_back(st2.top());
        }

        st2.push(i);
    }

    for (int i=0; i<A.size(); i++){
        int p2=right[n-i-1];
        int p1=left[i];
        int width=p2-p1-1;
        int h=A[i];
        area=max(area, h*width);
    }

    return area;


}

