Problem Description
Given two integers A and B, find a number X such that A xor X is minimum possible, and the number of set bits in X equals B.



Problem Constraints
0 <= A <= 109
0 <= B <= 30



Input Format
First argument contains a single integer A. Second argument contains a single integer B.



Output Format
Return a single integer X.



Example Input
Input 1:

 A = 3
 B = 3
Input 2:

 A = 15
 B = 2


Example Output
Output 1:

 7
Output 2:

 12


Example Explanation
Explanation 1:

 3 xor 7 = 4 which is minimum
Explanation 2:

 15 xor 12 = 3 which is minimum



 Observation:

 1. We know that A^A=0, if number of bits in A is equal to B, then answer will be A to make it minimum equal to 0. 
 2. If number of 1 bits in A > B, then for x the left side of B 1's bits should be same as A and all other bit should be zero to make the number minimum. 
 3. If number of 1 bits in A < B, then all the 1's of A can be cancelled out with (B- number of bits 1's bits in A) and to make the number minimum the remaining 1's should be placed
 int the right side of x. 


 solution:

 int Solution::solve(int A, int B) {

    int count=0;
    for (int i=0; i<32; i++)
    {
        if (A&(1<<i)) count++;
    }

    if (count==B) return A;

    if (count > B){
        int last_ones=count-B;
        int i=0;

        while (last_ones!=0){
            if(A&(1<<i)){
                A=A ^ (1<<i);
                last_ones--;
            }

            i++;
        }
    }

    if (count < B) {

        int last_zeroes=B-count;
        int i=0;

        while (last_zeroes>0){
            if ((A&(1<<i)) ==0){
                A=A^(1<<i);
                last_zeroes--;
            }

            i++;
        }



    }

    return A;
}

