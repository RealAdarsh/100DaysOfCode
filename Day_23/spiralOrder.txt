Problem Description
Given an integer A, generate a square matrix filled with elements from 1 to A2 in spiral order.



Problem Constraints
1 <= A <= 1000



Input Format
First and only argument is integer A


Output Format
Return a 2-D matrix which consists of the elements in spiral order.



Example Input
Input 1:

1
Input 2:

2


Example Output
Output 1:

[ [1] ]
Output 2:

[ [1, 2], [4, 3] ]


Example Explanation
Explanation 1:

 
Only 1 is to be arranged.
Explanation 2:

1 --> 2
      |
      |
4<--- 3




Solution:

vector<vector<int> > Solution::generateMatrix(int A) {
    vector <vector <int>> solMatrix(A, vector<int> (A,0));
    long long i=0;
    long long j=0;
    long long num=1;
    char ch='r';
    while (num<=A*A){
        if (ch=='r'){
            if (j==A || solMatrix[i][j]!=0 ){
                ch='d';
                i++;
                j--;
            }

            else {
                solMatrix[i][j]=num;
                num++;
                j++;
            }

        }


        else if (ch=='d'){
            if (i==A || solMatrix[i][j]!=0){
                ch='l';
                i--;
                j--;
            }

            else {
                solMatrix[i][j]=num;
                num++;
                i++;
            }

        }



        else if (ch=='l'){
            if (j<0 || solMatrix[i][j]!=0 ){
                ch='u';
                j++;
                i--;
            }

            else {
                solMatrix[i][j]=num;
                num++;
                j--;
            }

        }


        else {
            if (solMatrix[i][j]!=0 ){
                ch='r';
                j++;
                i++;
            }

            else {
                solMatrix[i][j]=num;
                num++;
                i--;
            }

        }
    }

    return solMatrix;
}

